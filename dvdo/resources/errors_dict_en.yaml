# yaml-language-server: $schema=./schemas/errors_dict.schema.json
---
"1":
  name: Invalid cheksum
  description: This error means either the checksum you sent was wrong or
    the transmission was bad due to interference (double check your checksum calculation
    or your serial link).
"2":
  name: Invalid packet id
  description:
    Invalid Incoming Packet ID (i.e. Command = "3"&"0", Query = "2"&"0", others are
    invalid when sent to the iScan)
"3":
  name: Invalid setting id
  description:
    Invalid Setting (i.e. Power = "A"&"1") if you get this error, make sure that
    the command is supported by the model you are using.
"4":
  name: Range error
  description:
    Range Error (i.e. Power on = "1", power off = "0") if you get this error you
    tried to set a value to the control which is either out of range or not supported.
"5":
  name: Bad packet character
  description:
    Bad Packet Character (i.e. STX, ETX, NUL) a valid ASCII character value may have
    been used in the wrong place - double check your syntax. Otherwise, ensure that
    only numbers, or punctuation (".", "+", or "-") was used.
"6":
  name: Packet corrupted
  description:
    Last byte of packet was not received within 100 milliseconds - if this happens,
    first make sure that the link is good. Then, ensure that your control device is
    waiting for a complete response packet before sending another packet. If your controller
    does not "listen" to the flow control pins (DSR/DTR look at section 2.1) the buffer
    may over-flow causing bytes to be lost. If no RS-232 return path is being used,
    pace your commands to about 10 commands every second.
"7":
  name: Unterminated value data
  description:
    Unterminated Data Value. This means you missed a "NUL" after a value and went
    straight to the "ETX" - check your syntax.
"8":
  name: Bad data
  description:
    Bad Data - If you get this response, first check your serial link, then check
    the table in Section 3 to ensure you sent the right type of value. If you send a
    "5E" for a control expecting a number like "1.453", you will get this type of error
    response.
"9":
  name: To many or too few characters
  description:
    Too many or too few data characters. This error appears if your packet has the
    wrong byte counts value, or you don't have all of the data in the string.
"10":
  name: Non writable setting
  description:
    The setting is not writable (i.e. command for "Device Name"), this will be your
    response if you attempt to write to a query only Command ID
"11":
  name: Packet exceeds maximum size
  description:
    The packet is larger than the maximum packet size. You should never see this
    error - we do not have any controls which are at the time of this writing even close
    to the maximum size. If this error comes back - check your serial link and syntax.
    If you are transmitting more that 50 bytes in a single command you are probably
    doing something wrong!!
